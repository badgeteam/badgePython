//
// Created by Tom on 12/07/2019.
//

#ifndef NEW_ESP32_FIRMWARE_FONT_6X3_H
#define NEW_ESP32_FIRMWARE_FONT_6X3_H

#include <sdkconfig.h>
#include <stdint.h>
#include "stdlib.h"
#include "color.h"

typedef struct character {
    uint8_t width; /* Characters limited to 255 pixels wide */
    uint8_t rows[6]; /* 6 pixels tall */
} character;

volatile static character font_6x3[] = {
        {2, {0b000, 0b000, 0b000, 0b000, 0b000, 0b000}},// (space)
        {1, {0b001, 0b001, 0b001, 0b000, 0b001, 0b000}},// !
        {3, {0b101, 0b101, 0b000, 0b000, 0b000, 0b000}},// "
        {5, {0b01010, 0b11111, 0b01010, 0b11111, 0b01010, 0b000}},// #
        {3, {0b111, 0b001, 0b011, 0b010, 0b000, 0b010}},// $ (set to ?)
        {3, {0b001, 0b101, 0b010, 0b010, 0b101, 0b100}},// %
        {3, {0b111, 0b001, 0b011, 0b010, 0b000, 0b010}},// & (set to ?)
        {1, {0b001, 0b001, 0b000, 0b000, 0b000, 0b000}},// '
        {2, {0b001, 0b010, 0b010, 0b010, 0b001, 0b000}},// (
        {2, {0b010, 0b001, 0b001, 0b001, 0b010, 0b000}},// )
        {2, {0b101, 0b010, 0b101, 0b000, 0b000, 0b000}},// *
        {3, {0b000, 0b000, 0b010, 0b111, 0b010, 0b000}},// +
        {2, {0b000, 0b000, 0b000, 0b000, 0b001, 0b010}},// ,
        {3, {0b000, 0b000, 0b111, 0b000, 0b000, 0b000}},// -
        {1, {0b000, 0b000, 0b000, 0b000, 0b001, 0b000}},// .
        {3, {0b001, 0b001, 0b010, 0b010, 0b100, 0b100}},// /
        {3, {0b011, 0b101, 0b101, 0b101, 0b110, 0b000}},// 0
        {3, {0b010, 0b110, 0b010, 0b010, 0b111, 0b000}},// 1
        {3, {0b110, 0b001, 0b010, 0b100, 0b111, 0b000}},// 2
        {3, {0b110, 0b001, 0b010, 0b001, 0b110, 0b000}},// 3
        {3, {0b101, 0b101, 0b111, 0b001, 0b001, 0b000}},// 4
        {3, {0b111, 0b100, 0b110, 0b001, 0b110, 0b000}},// 5
        {3, {0b011, 0b100, 0b111, 0b101, 0b111, 0b000}},// 6
        {3, {0b111, 0b001, 0b010, 0b100, 0b100, 0b000}},// 7
        {3, {0b111, 0b101, 0b111, 0b101, 0b111, 0b000}},// 8
        {3, {0b111, 0b101, 0b111, 0b001, 0b110, 0b000}},// 9
        {1, {0b000, 0b001, 0b000, 0b001, 0b000, 0b000}},// :
        {2, {0b000, 0b001, 0b000, 0b001, 0b010, 0b000}},// ;
        {3, {0b001, 0b010, 0b100, 0b010, 0b001, 0b000}},// <
        {3, {0b000, 0b111, 0b000, 0b111, 0b000, 0b000}},// =
        {3, {0b100, 0b010, 0b001, 0b010, 0b100, 0b000}},// >
        {3, {0b111, 0b001, 0b011, 0b010, 0b000, 0b010}},// ?
        {4, {0b0110, 0b1011, 0b1011, 0b1000, 0b0110, 0b0000}},// @
        {3, {0b010, 0b101, 0b111, 0b101, 0b101, 0b000}},// A
        {3, {0b110, 0b101, 0b110, 0b101, 0b110, 0b000}},// B
        {3, {0b011, 0b100, 0b100, 0b100, 0b011, 0b000}},// C
        {3, {0b110, 0b101, 0b101, 0b101, 0b110, 0b000}},// D
        {3, {0b111, 0b100, 0b111, 0b100, 0b111, 0b000}},// E
        {3, {0b111, 0b100, 0b111, 0b100, 0b100, 0b000}},// F
        {3, {0b011, 0b100, 0b111, 0b101, 0b011, 0b000}},// G
        {3, {0b101, 0b101, 0b111, 0b101, 0b101, 0b000}},// H
        {3, {0b111, 0b010, 0b010, 0b010, 0b111, 0b000}},// I
        {3, {0b001, 0b001, 0b001, 0b101, 0b010, 0b000}},// J
        {3, {0b101, 0b101, 0b110, 0b101, 0b101, 0b000}},// K
        {3, {0b100, 0b100, 0b100, 0b100, 0b111, 0b000}},// L
        {3, {0b101, 0b111, 0b111, 0b101, 0b101, 0b000}},// M
        {3, {0b101, 0b111, 0b111, 0b111, 0b101, 0b000}},// N
        {3, {0b010, 0b101, 0b101, 0b101, 0b010, 0b000}},// O
        {3, {0b110, 0b101, 0b110, 0b100, 0b100, 0b000}},// P
        {3, {0b010, 0b101, 0b101, 0b101, 0b011, 0b000}},// Q
        {3, {0b110, 0b101, 0b110, 0b110, 0b101, 0b000}},// R
        {3, {0b011, 0b100, 0b010, 0b001, 0b110, 0b000}},// S
        {3, {0b111, 0b010, 0b010, 0b010, 0b010, 0b000}},// T
        {3, {0b101, 0b101, 0b101, 0b101, 0b011, 0b000}},// U
        {3, {0b101, 0b101, 0b101, 0b010, 0b010, 0b000}},// V
        {3, {0b101, 0b101, 0b111, 0b111, 0b101, 0b000}},// W
        {3, {0b101, 0b101, 0b010, 0b101, 0b101, 0b000}},// X
        {3, {0b101, 0b101, 0b010, 0b010, 0b010, 0b000}},// Y
        {3, {0b111, 0b001, 0b010, 0b100, 0b111, 0b000}},// Z
        {2, {0b110, 0b100, 0b100, 0b100, 0b100, 0b110}},// [
        {3, {0b100, 0b100, 0b010, 0b010, 0b001, 0b001}},// "\"
        {2, {0b011, 0b001, 0b001, 0b001, 0b001, 0b011}},// ]
        {3, {0b010, 0b101, 0b000, 0b000, 0b111, 0b000}},// ^
        {3, {0b000, 0b000, 0b000, 0b000, 0b111, 0b000}},// _
        {3, {0b000, 0b100, 0b010, 0b000, 0b000, 0b000}},// `
        {3, {0b000, 0b110, 0b011, 0b101, 0b111, 0b000}}, //a
        {3, {0b100, 0b110, 0b101, 0b101, 0b110, 0b000}}, //b
        {3, {0b000, 0b011, 0b100, 0b100, 0b011, 0b000}}, //c
        {3, {0b001, 0b011, 0b101, 0b101, 0b011, 0b000}}, //d
        {3, {0b000, 0b011, 0b101, 0b110, 0b011, 0b000}}, //e
        {3, {0b001, 0b010, 0b111, 0b010, 0b010, 0b000}}, //f
        {3, {0b000, 0b011, 0b101, 0b111, 0b001, 0b010}}, //g
        {3, {0b100, 0b111, 0b101, 0b101, 0b101, 0b000}}, //h
        {1, {0b001, 0b000, 0b001, 0b001, 0b001, 0b000}}, //i
        {3, {0b001, 0b000, 0b001, 0b001, 0b101, 0b010}}, //j
        {3, {0b100, 0b101, 0b110, 0b110, 0b101, 0b000}}, //k
        {1, {0b001, 0b001, 0b001, 0b001, 0b001, 0b000}}, //l
        {3, {0b000, 0b111, 0b111, 0b111, 0b101, 0b000}}, //m
        {3, {0b000, 0b110, 0b101, 0b101, 0b101, 0b000}}, //n
        {3, {0b000, 0b010, 0b101, 0b101, 0b010, 0b000}}, //o
        {3, {0b000, 0b110, 0b101, 0b101, 0b110, 0b100}}, //p
        {3, {0b000, 0b011, 0b101, 0b101, 0b011, 0b001}}, //q
        {3, {0b000, 0b011, 0b100, 0b100, 0b100, 0b000}}, //r
        {3, {0b000, 0b011, 0b110, 0b011, 0b110, 0b000}}, //s
        {3, {0b010, 0b111, 0b010, 0b010, 0b011, 0b000}}, //t
        {3, {0b000, 0b101, 0b101, 0b101, 0b011, 0b000}}, //u
        {3, {0b000, 0b101, 0b101, 0b111, 0b010, 0b000}}, //v
        {3, {0b000, 0b101, 0b111, 0b111, 0b111, 0b000}}, //w
        {3, {0b000, 0b101, 0b111, 0b111, 0b111, 0b000}}, //x
        {3, {0b000, 0b101, 0b101, 0b011, 0b001, 0b010}}, //y
        {3, {0b000, 0b111, 0b011, 0b110, 0b111, 0b000}}, //z
        {3, {0b011, 0b010, 0b010, 0b110, 0b010, 0b011}},// {
        {1, {0b001, 0b001, 0b001, 0b001, 0b001, 0b001}},// |
        {3, {0b110, 0b010, 0b010, 0b011, 0b010, 0b110}},// }
        {3, {0b100, 0b010, 0b001, 0b010, 0b100, 0b000}},// ->
        {3, {0b001, 0b010, 0b100, 0b010, 0b001, 0b000}} // <-
};


void renderChar_6x3(uint8_t charId, Color color, int *x, int y, int endX, int *offset, float micro_frame);
int getCharWidth_6x3(uint8_t charId);

#endif //NEW_ESP32_FIRMWARE_FONT_6X3_H
